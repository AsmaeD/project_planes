#!/bin/env python3

#importation des exceptions django, des packages python et des classes de l'application

from django.core.exceptions import ObjectDoesNotExist
from application1.models import Airports, Incidents, Incidents_description
import pandas as pd

#Cr√©ation des dataframes

airports = pd.read_csv("airports_data")
incidents = pd.read_csv("incidents_data")

#Remplissage de la table "Airports"

(n,m)=airports.shape

for i in range(n) :

	code = airports['ICAO'][i]
	try:
		IACO_code=Airports_dep.objects.get(IACO=code)
    except ObjectDoesNotExist as err:
        IACO_code = Airports_dep(IACO=code)
        IACO_code.save()
    
    name = airports['Name'][i]
    try:
		name_airp = Airports_dep.objects.get(airport_name=name)
	except ObjectDoesNotExist as err:
		name_airp = Airports_dep(airport_name=name)
		name_airp.save()
	
	ville = airports['City'][i]
	City = Airports_dep(city=ville)
	City.save()
	
	pays = airports['Country'][i]
	Country = Airports_dep(country=pays)
	Country.save()
	
	Latitude = airports['Lat'][i]
	try:
		latitude = Airports_dep.objects.get(lat=Latitude)
	except ObjectDoesNotExist as err:
		latitude = Airports_dep(lat=Latitude)
		latitude.save()
		
	Longitude = airports['Lon'][i]
	try:
		longitude = Airports_dep.objects.get(lon=Longitude)
	except ObjectDoesNotExist as err:
		longitude = Airports_dep(lon=Longitude)
		longitude.save()
	
	code = airports['ICAO'][i]
	try:
		IACO_code=Airports_arr.objects.get(IACO=code)
    except ObjectDoesNotExist as err:
        IACO_code = Airports_arr(IACO=code)
        IACO_code.save()
    
    name = airports['Name'][i]
    try:
		name_airp = Airports_arr.objects.get(airport_name=name)
	except ObjectDoesNotExist as err:
		name_airp = Airports_arr(airport_name=name)
		name_airp.save()
	
	ville = airports['City'][i]
	City = Airports_arr(city=ville)
	City.save()
	
	pays = airports['Country'][i]
	Country = Airports_arr(country=pays)
	Country.save()
	
	Latitude = airports['Lat'][i]
	try:
		latitude = Airports_arr.objects.get(lat=Latitude)
	except ObjectDoesNotExist as err:
		latitude = Airports_arr(lat=Latitude)
		latitude.save()
		
	Longitude = airports['Lon'][i]
	try:
		longitude = Airports_arr.objects.get(lon=Longitude)
	except ObjectDoesNotExist as err:
		longitude = Airports_arr(lon=Longitude)
		longitude.save()

(p,q) = incidents.shape

for k in range(p):
	
	Date = incidents['date'][k]
	dat = Incidents(date=Date)
	dat.save()
	
	code_IACO_dep = incidents['airp_dep_ICAO'][k]
	if code_IACO_dep in airports['ICAO']:
		code_dep = Incidents(airport_dep=code_IACO_dep)
		code_dep.save()
	else:
		pass
	
	code_IACO_arr = incidents['airp_arr_ICAO'][k]
	if code_IACO_arr in airports['ICAO']:
		code_arr = Incidents(airport_arr=code_IACO_arr)
		code_arr.save()
	else:
		pass
	
	localisation = incidents['location'][k]
	loc = Incidents(location=localisation)
	loc.save()
	
	inc_country = incidents['incident_country'][k]
	inc_count = Incidents(incident_country=inc_country)
	inc_count.save()
	
	plane = incidents['type'][k]
	type_plane = Incidents(plane_type=plane)
	type_plane.save()
	
	id_inc = k+1
	try:
		id_acc = Incidents_description.objects.get(id_incidents=id_inc)
	except ObjectDoesNotExist as err:
		id_acc = Incidents_description(id_incidents=id_inc)
		id_acc.save()
	
	acc_type = incidents['cat'][k]
	type_inc = Incidents_description(inc_type=acc_type)
	type_inc.save()
	
	fatal = incidents['fat.'][k]
	death = Incidents_description(fatalities=fatal)
	death.save()
	
	operateur = incidents['operator'][k]
	company = Incidents_description(airline=operateur)
	company.save()
